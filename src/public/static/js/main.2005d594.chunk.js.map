{"version":3,"sources":["assets/logo-small.svg","views/CreateAccountPage/createAccountPage.module.scss","components/ActionMenu/actionMenu.module.scss","components/DeleteModal/deleteModal.module.scss","views/AssetsPage/assetMenu/assetMenu.module.scss","views/DevicesPage/deviceMenu/deviceMenu.module.scss","views/DeviceCategoriesPage/deviceCategoriesMenu/deviceCategoriesMenu.module.scss","assets/hands.jpg","assets/hands2.jpg","views/DevicesPage/addDevice/addDevice.module.scss","views/DevicesPage/editDevice/editDevice.module.scss","views/MainPage/footer/footer.module.scss","components/Navbar/PublicNavbar.js","common/functions/openNotification/openNotification.js","components/Navbar/ProtectedNavbar.js","components/Navbar/Navbar.js","routes.js","views/MainPage/emailForm/emailSchemas.js","views/MainPage/emailForm/EmailForm.js","views/MainPage/footer/Footer.js","views/MainPage/MainPage.js","views/LoginPage/LoginPage.js","views/CreateAccountPage/CreateAccountPage.js","views/AssetsPage/assetSchemas.js","components/ActionMenu/ActionMenu.js","components/DeleteModal/DeleteModal.js","views/AssetsPage/assetMenu/AssetMenu.js","views/AssetsPage/assetsData.js","views/AssetsPage/AssetsPage.js","components/CreateContainer/CreateContainer.js","views/AssetsPage/createAsset/CreateAsset.js","views/AssetsPage/editAsset/EditAsset.js","views/DevicesPage/devicesSchemas.js","views/DevicesPage/deviceMenu/DeviceMenu.js","views/DevicesPage/devicesData.js","views/DeviceCategoriesPage/categoriesSchemas.js","views/DevicesPage/addDeviceCategory/AddDeviceCategory.js","views/DevicesPage/DevicesPage.js","views/DevicesPage/addDevice/AddDevice.js","views/DevicesPage/editDevice/EditDevice.js","views/ErrorPage/ErrorPage.js","views/DeviceCategoriesPage/deviceCategoriesMenu/deviceCategoriesMenu.js","views/DeviceCategoriesPage/categoriesData.js","views/DeviceCategoriesPage/DeviceCategoriesPage.js","views/DeviceCategoriesPage/categoryPage/CategoryPage.js","App.js","index.js","views/MainPage/emailForm/emailForm.module.scss","views/LoginPage/loginPage.module.scss"],"names":["module","exports","PublicNavbar","useState","current","setCurrent","history","useHistory","Item","Menu","onClick","e","key","selectedKeys","mode","className","src","Logo","width","height","push","name","scroller","scrollTo","duration","delay","smooth","size","type","openNotification","title","message","notification","open","description","icon","icons","error","FrownOutlined","style","color","success","SmileOutlined","ProtectedNavbar","useCookies","removeCookie","alt","Navbar","isAuthenticated","PrivateRoute","children","rest","render","location","to","pathname","state","from","LoginRoute","CONTACT_EMAIL","gql","layout","span","validateMessages","required","types","email","number","range","EmailForm","useMutation","onCompleted","data","contactEmail","loading","styles","emailContainer","formContainer","onFinish","values","variables","wrapperCol","offset","titleContainer","subTitle","rules","placeholder","TextArea","buttonContainer","htmlType","sendButton","Footer","footerContainer","gutter","logo","infoContainer","MailOutlined","infoParagraph","PhoneOutlined","AimOutlined","FacebookFilled","facebook","console","log","InstagramFilled","instagram","YoutubeFilled","youtube","copyright","MainPage","Title","Typography","LOGIN_USER","CreateAccountPage","login","status","window","loginUser","loginContainer","Hands","initialValues","remember","password","onFinishFailed","errorInfo","Password","loginButton","infoText","CREATE_USER","register","registerUser","createContainer","GET_ASSETS","DELETE_ASSET","EDIT_ASSET","CREATE_ASSET","GET_ASSET","text","ActionMenu","content","popoverContainer","placement","trigger","button","EllipsisOutlined","popoverIcon","DeleteModal","props","isModalOpen","handleOk","handleCancel","formatMessage","useIntl","visible","WarningOutlined","modalIcon","onOk","onCancel","footer","modalCancel","messages","cancel","deleteModalButton","delete","defineMessages","id","defaultMessage","AssetMenu","record","setIsModalOpen","deleteAsset","update","cache","addAsset","allAssets","readQuery","query","writeQuery","allElements","filter","el","count","deleteLoading","deleteData","buttonsContainer","deleteButton","deleteMessage","asset","create","columns","dataIndex","AssetsPage","useQuery","columnData","map","PlusOutlined","dataSource","labelCol","CreateContainer","formItems","backTo","currentPage","onSubmit","goBack","save","CreateAsset","concat","createAsset","Fragment","label","min","max","EditAsset","assetId","URLSearchParams","search","get","assetLoading","assetData","getAsset","quantity","edit","editAsset","assetIndex","find","index","editData","initialValue","GET_ALL_DEVICES","ADD_DEVICE","DELETE_DEVICE","EDIT_DEVICE","GET_CATEGORIES","ADD_DEVICE_CATEGORY","GET_DEVICE","DeviceMenu","deleteDevice","addDevice","allDevices","category","device","DELETE_DEVICE_CATEGORY","DEVICES_BY_CATEGORY","AddDeviceCategory","setVisible","Form","useForm","form","Select","Option","createDeviceCategory","allDeviceCategories","addDeviceCategory","okText","cancelText","validateFields","then","resetFields","catch","info","modifier","inputTitle","categoryName","DevicesPage","menu","ghost","overlay","DownOutlined","config","AddDevice","value","onChange","setCategory","categoryData","defaultValue","select","disabled","length","newCategory","cat","EditDevice","deviceId","deviceLoading","deviceData","getDevice","lastMaintenance","productionDate","deviceLocation","editDevice","deviceIndex","moment","ErrorPage","params","errorNumber","extra","DeviceCategoriesMenu","deleteDeviceCategory","categories","detailsColumns","DeviceCategoriesPage","categoryId","allDevicesByCategory","App","path","LoginPage","CategoryPage","httpLink","createHttpLink","uri","credentials","authLink","ApolloLink","operation","forward","response","Object","some","x","errorLink","onError","graphQLErrors","networkError","locations","client","ApolloClient","InMemoryCache","link","ReactDOM","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2005d594.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-small.62d97756.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createContainer\":\"createAccountPage_createContainer__3HC1i\",\"formContainer\":\"createAccountPage_formContainer__1Q4t6\",\"title\":\"createAccountPage_title__1mh_Z\",\"loginButton\":\"createAccountPage_loginButton__1AiIY\",\"infoText\":\"createAccountPage_infoText__1r0cS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popoverIcon\":\"actionMenu_popoverIcon__3RvtX\",\"button\":\"actionMenu_button__2T5nV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteModalButton\":\"deleteModal_deleteModalButton__2f5eL\",\"modalCancel\":\"deleteModal_modalCancel__3IJ_5\",\"modalIcon\":\"deleteModal_modalIcon__11Sas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popoverIcon\":\"assetMenu_popoverIcon__3Ejbr\",\"buttonsContainer\":\"assetMenu_buttonsContainer__1g-zV\",\"button\":\"assetMenu_button__37fu_\",\"deleteButton\":\"assetMenu_deleteButton__1EpjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popoverIcon\":\"deviceMenu_popoverIcon__T8cZU\",\"buttonsContainer\":\"deviceMenu_buttonsContainer__8wpiL\",\"button\":\"deviceMenu_button__sDR6m\",\"deleteButton\":\"deviceMenu_deleteButton__2YF5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popoverIcon\":\"deviceCategoriesMenu_popoverIcon__26Zjk\",\"buttonsContainer\":\"deviceCategoriesMenu_buttonsContainer__1mh58\",\"button\":\"deviceCategoriesMenu_button__1YS9u\",\"deleteButton\":\"deviceCategoriesMenu_deleteButton__2IPSk\"};","module.exports = __webpack_public_path__ + \"static/media/hands.36b14f85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hands2.4a29e389.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"addDevice_select__30Wat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"editDevice_select__3TtDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"footer_footerContainer__No_4V\",\"infoContainer\":\"footer_infoContainer__3Ba1C\",\"infoParagraph\":\"footer_infoParagraph__INAR1\",\"icon\":\"footer_icon__1Loe7\",\"facebook\":\"footer_facebook__3DTK_\",\"instagram\":\"footer_instagram__3Nuwj\",\"youtube\":\"footer_youtube__2JcDU\",\"copyright\":\"footer_copyright__2cUHP\",\"logo\":\"footer_logo__26MIE\"};","import React, { useState } from 'react';\r\n\r\nimport { Menu, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Link,\r\n  DirectLink,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from 'react-scroll';\r\nimport Logo from '../../assets/logo-small.svg';\r\n\r\nimport './navbar.scss';\r\n\r\nconst PublicNavbar = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const history = useHistory();\r\n  const { Item } = Menu;\r\n\r\n  const scrollTo = (name) => {\r\n    scroller.scrollTo(name, {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      onClick={(e) => setCurrent(e.key)}\r\n      selectedKeys={[current]}\r\n      mode='horizontal'\r\n      className='menuContainer'>\r\n      <Item key='logo'>\r\n        <img\r\n          src={Logo}\r\n          width={100}\r\n          height={40}\r\n          onClick={() => history.push('/devices')}\r\n        />\r\n      </Item>\r\n      <Item className='menuButton' key='mail'>\r\n        Functions\r\n      </Item>\r\n      <Item key='aboutus'>About us</Item>\r\n      <Item key='contact'>\r\n        <a\r\n          onClick={() => {\r\n            history.push('/');\r\n            scrollTo('contact');\r\n          }}>\r\n          Contact\r\n        </a>\r\n      </Item>\r\n      <Item key='login'>\r\n        <Button size='large' onClick={() => history.push('/login')}>\r\n          Login\r\n        </Button>\r\n      </Item>\r\n      <Item key='create'>\r\n        <Button\r\n          type='primary'\r\n          size='large'\r\n          onClick={() => history.push('/createAccount')}>\r\n          Create account\r\n        </Button>\r\n      </Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default PublicNavbar;\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport { SmileOutlined, MehOutlined, FrownOutlined } from '@ant-design/icons';\r\nimport './notification.scss';\r\n\r\nexport const openNotification = (title, message, type) => {\r\n  notification.open({\r\n    message: title,\r\n    description: message,\r\n    icon: icons[type],\r\n  });\r\n};\r\n\r\nconst icons = {\r\n  error: <FrownOutlined style={{ color: '#be0a0aa6' }} />,\r\n  success: <SmileOutlined style={{ color: '#37a01ca9' }} />,\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { Menu, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport Logo from '../../assets/logo-small.svg';\r\nimport { openNotification } from '../../common/functions/openNotification/openNotification';\r\n\r\nimport './navbar.scss';\r\n\r\nconst ProtectedNavbar = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const history = useHistory();\r\n  const [_, __, removeCookie] = useCookies();\r\n  const { Item } = Menu;\r\n  return (\r\n    <Menu\r\n      onClick={(e) => setCurrent(e.key)}\r\n      selectedKeys={[current]}\r\n      mode='horizontal'\r\n      className='menuContainer'>\r\n      <Item key='logo'>\r\n        <img\r\n          src={Logo}\r\n          width={100}\r\n          height={40}\r\n          alt='logo'\r\n          onClick={() => history.push('/')}\r\n        />\r\n      </Item>\r\n      <Item className='menuButton' key='devices'>\r\n        <Button\r\n          size='small'\r\n          type='link'\r\n          onClick={() => history.push('/devices')}>\r\n          Devices\r\n        </Button>\r\n      </Item>\r\n      <Item key='categories'>\r\n        <Button\r\n          size='small'\r\n          type='link'\r\n          onClick={() => history.push('/deviceCategories')}>\r\n          Device categories\r\n        </Button>\r\n      </Item>\r\n      <Item key='assets'>\r\n        <Button\r\n          size='small'\r\n          type='link'\r\n          onClick={() => history.push('/assets')}>\r\n          Assets\r\n        </Button>\r\n      </Item>\r\n\r\n      <Item key='create'>\r\n        <Button\r\n          type='primary'\r\n          size='large'\r\n          onClick={() => {\r\n            removeCookie('refresh-token');\r\n            openNotification('Logout', \"You've been logged out succesfully!\");\r\n            history.push('/');\r\n          }}>\r\n          Log out\r\n        </Button>\r\n      </Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ProtectedNavbar;\r\n","import React from 'react';\r\n\r\nimport PublicNavbar from './PublicNavbar';\r\nimport ProtectedNavbar from './ProtectedNavbar';\r\n\r\nimport './navbar.scss';\r\n\r\nconst Navbar = ({ isAuthenticated }) => {\r\n  return isAuthenticated ? <ProtectedNavbar /> : <PublicNavbar />;\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, children, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const LoginRoute = ({ isAuthenticated, children, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nexport const CONTACT_EMAIL = gql`\r\n  mutation contactEmail(\r\n    $name: String!\r\n    $email: String\r\n    $phone: Int!\r\n    $message: String!\r\n  ) {\r\n    contactEmail(name: $name, email: $email, phone: $phone, message: $message) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Form, Input, InputNumber, Button } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { CONTACT_EMAIL } from './emailSchemas';\r\nimport { openNotification } from '../../../common/functions/openNotification/openNotification';\r\n\r\nimport styles from './emailForm.module.scss';\r\n\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 5 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nconst EmailForm = () => {\r\n  const [\r\n    contactEmail,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(CONTACT_EMAIL, {\r\n    onCompleted: (data) => {\r\n      openNotification('Add asset', data.contactEmail.message, 'success');\r\n    },\r\n  });\r\n\r\n  const onFinish = (values) => {\r\n    contactEmail({ variables: { ...values } });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.emailContainer}>\r\n      <Form\r\n        className={styles.formContainer}\r\n        name='nest-messages'\r\n        onFinish={onFinish}\r\n        validateMessages={validateMessages}>\r\n        <Form.Item\r\n          wrapperCol={{ ...layout.wrapperCol, offset: 6 }}\r\n          className={styles.titleContainer}>\r\n          <h3 className={styles.subTitle}>Do you have any questions?</h3>\r\n          <h1 className={styles.title}>Contact us!</h1>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='name'\r\n          rules={[{ required: true }]}\r\n          wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n          <Input placeholder='Name' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='email'\r\n          rules={[{ type: 'email' }]}\r\n          wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n          <Input placeholder='Email' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='phone'\r\n          rules={[{ type: 'number' }]}\r\n          wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n          <InputNumber placeholder='Phone number' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='message'\r\n          wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n          <Input.TextArea placeholder='Message' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{ ...layout.wrapperCol, offset: 6 }}\r\n          className={styles.buttonContainer}>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            size='large'\r\n            className={styles.sendButton}>\r\n            SEND\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n","import React from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport {\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  AimOutlined,\r\n  FacebookFilled,\r\n  InstagramFilled,\r\n  YoutubeFilled,\r\n} from '@ant-design/icons';\r\nimport Logo from '../../../assets/logo-small.svg';\r\n\r\nimport styles from './footer.module.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={styles.footerContainer}>\r\n      <Row gutter={[24, 24]}>\r\n        <Col span={4} offset={4}>\r\n          <img src={Logo} height={60} width={150} className={styles.logo} />\r\n          <p>\r\n            Medical devices and hospital stock managment system in the form of a\r\n            convenient application which will allow you to save your time.\r\n          </p>\r\n        </Col>\r\n        <Col span={4} offset={1}>\r\n          <div className={styles.infoContainer}>\r\n            <h3>Documents</h3>\r\n            <div>\r\n              <Button type='link'>Regulations of user</Button>\r\n            </div>\r\n            <div>\r\n              <Button type='link'>Privacy policy</Button>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col span={4} offset={1}>\r\n          <div className={styles.infoContainer}>\r\n            <h3>Contact us</h3>\r\n            <div className={styles.icon}>\r\n              <MailOutlined />\r\n              <p className={styles.infoParagraph}>hsys@gmail.com</p>\r\n            </div>\r\n            <div className={styles.icon}>\r\n              <PhoneOutlined />\r\n              <p className={styles.infoParagraph}>+48 444 555 666</p>\r\n            </div>\r\n            <div className={styles.icon}>\r\n              <AimOutlined />\r\n              <p className={styles.infoParagraph}>Cracow, Poland</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col span={4}>\r\n          <div className={styles.infoContainer}>\r\n            <FacebookFilled\r\n              className={styles.facebook}\r\n              onClick={() => console.log('Halo')}\r\n            />\r\n            <InstagramFilled className={styles.instagram} />\r\n            <YoutubeFilled className={styles.youtube} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className={styles.copyright} span={24}>\r\n          Copyright 2020 ©Hsys. All rights reserved\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Button, Typography } from 'antd';\r\nimport EmailForm from './emailForm/EmailForm';\r\nimport Footer from './footer/Footer';\r\n\r\nimport './mainPage.scss';\r\n\r\nconst MainPage = () => {\r\n  const { Title } = Typography;\r\n  return (\r\n    <div>\r\n      <div className='heroImage'>\r\n        <Title className='heroTitle'>\r\n          Innovative system for hospitals and medical facilities\r\n        </Title>\r\n        <Button className='heroButton' size='large'>\r\n          Check out details\r\n        </Button>\r\n      </div>\r\n      <div name='contact'>\r\n        <EmailForm name='contact' />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { Input, Typography, Form, Checkbox, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Hands from '../../assets/hands.jpg';\r\nimport { openNotification } from '../../common/functions/openNotification/openNotification';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './loginPage.module.scss';\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation LoginUser($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateAccountPage = () => {\r\n  const history = useHistory();\r\n  const [\r\n    loginUser,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(LOGIN_USER, {\r\n    onCompleted: (data) => {\r\n      if (data.login.status) {\r\n        openNotification('Login', data.login.message, 'success');\r\n        return (window.location = '/');\r\n      }\r\n      openNotification('Login', data.login.message, 'error');\r\n    },\r\n  });\r\n\r\n  const { Title } = Typography;\r\n\r\n  const onFinish = ({ email, password }) => {\r\n    loginUser({\r\n      variables: { password, email },\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginContainer}>\r\n      <img src={Hands} height='100%' width='50%' />\r\n      <div className={styles.formContainer}>\r\n        <Title className={styles.title}>Account login</Title>\r\n        <Form\r\n          name='basic'\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}>\r\n          <Form.Item\r\n            name='email'\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            rules={[{ required: true, message: 'Please input your email!' }]}>\r\n            <Input placeholder='Name' />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name='password'\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            rules={[\r\n              { required: true, message: 'Please input your password!' },\r\n            ]}>\r\n            <Input.Password placeholder='Password' />\r\n          </Form.Item>\r\n\r\n          {/* <Form.Item {...tailLayout} name='remember' valuePropName='checked'>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item> */}\r\n\r\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n            <Button\r\n              type='primary'\r\n              htmlType='submit'\r\n              className={styles.loginButton}>\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            className={styles.infoText}>\r\n            <h3>\r\n              Forgot {<Link to='/'>username</Link>}/\r\n              {<Link to='/'>password</Link>}?\r\n            </h3>\r\n          </Form.Item>\r\n          <Form.Item\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            className={styles.infoText}>\r\n            <h3>or</h3>\r\n          </Form.Item>\r\n          <Form.Item\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            className={styles.infoText}>\r\n            <h3>Create new account {<Link to='/createAccount'>here</Link>}.</h3>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAccountPage;\r\n","import React from 'react';\r\nimport { Input, Typography, Form, Checkbox, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { openNotification } from '../../common/functions/openNotification/openNotification';\r\nimport Hands from '../../assets/hands2.jpg';\r\n\r\nimport styles from './createAccountPage.module.scss';\r\nimport './createAccountPage.scss';\r\n\r\nconst CREATE_USER = gql`\r\n  mutation RegisterUser($email: String!, $password: String!) {\r\n    register(email: $email, password: $password) {\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ALL_DEVICE_CATEGORIES = gql`\r\n  query allDeviceCategories {\r\n    allDeviceCategories {\r\n      allElements {\r\n        id\r\n        name\r\n        quantity\r\n      }\r\n      info {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateAccountPage = () => {\r\n  const history = useHistory();\r\n  const [\r\n    registerUser,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(CREATE_USER, {\r\n    onCompleted: (data) => {\r\n      openNotification('Register', data.register.message);\r\n      window.location = '/';\r\n    },\r\n  });\r\n\r\n  const { Title } = Typography;\r\n\r\n  const onFinish = ({ email, password }) => {\r\n    registerUser({\r\n      variables: { password, email },\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.createContainer}>\r\n      <img src={Hands} height='100%' width='50%' />\r\n      <div className={styles.formContainer}>\r\n        <Title className={styles.title}>Create Account</Title>\r\n        <Form\r\n          name='basic'\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}>\r\n          <Form.Item\r\n            name='email'\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            rules={[{ required: true, message: 'Please input your email!' }]}>\r\n            <Input placeholder='Email' />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name='password'\r\n            wrapperCol={{ span: 12, offset: 6 }}\r\n            rules={[\r\n              { required: true, message: 'Please input your password!' },\r\n            ]}>\r\n            <Input.Password placeholder='Password' />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n            <Button\r\n              type='primary'\r\n              htmlType='submit'\r\n              className={styles.loginButton}>\r\n              Create account\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAccountPage;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_ASSETS = gql`\r\n  query GetAllAssets {\r\n    allAssets {\r\n      allElements {\r\n        id\r\n        name\r\n        quantity\r\n        description\r\n      }\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_ASSET = gql`\r\n  mutation deleteAsset($id: ID!) {\r\n    deleteAsset(id: $id) {\r\n      message\r\n      success\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_ASSET = gql`\r\n  mutation editAsset(\r\n    $id: ID!\r\n    $name: String\r\n    $quantity: Int\r\n    $description: String\r\n  ) {\r\n    editAsset(\r\n      id: $id\r\n      name: $name\r\n      quantity: $quantity\r\n      description: $description\r\n    ) {\r\n      message\r\n      success\r\n      asset {\r\n        id\r\n        name\r\n        description\r\n        quantity\r\n      }\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ASSET = gql`\r\n  mutation createAsset($name: String!, $description: String, $quantity: Int!) {\r\n    addAsset(name: $name, description: $description, quantity: $quantity) {\r\n      message\r\n      asset {\r\n        id\r\n        name\r\n        quantity\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ASSET = gql`\r\n  query GetAsset($id: ID!) {\r\n    getAsset(id: $id) {\r\n      name\r\n      quantity\r\n      description\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Popover, Button } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport styles from './actionMenu.module.scss';\r\n\r\nconst text = <span>Actions</span>;\r\n\r\nconst ActionMenu = ({ content }) => {\r\n  return (\r\n    <div className={styles.popoverContainer}>\r\n      <Popover\r\n        placement='bottom'\r\n        title={text}\r\n        content={content}\r\n        trigger='click'>\r\n        <Button className={styles.button}>\r\n          <EllipsisOutlined className={styles.popoverIcon} />\r\n        </Button>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionMenu;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'antd';\r\nimport { WarningOutlined } from '@ant-design/icons';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport styles from './deleteModal.module.scss';\r\n\r\nconst DeleteModal = (props) => {\r\n  const {\r\n    isModalOpen,\r\n    loading,\r\n    handleOk,\r\n    handleCancel,\r\n    title,\r\n    message,\r\n  } = props;\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <Modal\r\n      visible={isModalOpen || loading}\r\n      title={\r\n        <div>\r\n          <WarningOutlined className={styles.modalIcon} />\r\n          {title}\r\n        </div>\r\n      }\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={[\r\n        <Button\r\n          key='back'\r\n          onClick={handleCancel}\r\n          className={styles.modalCancel}>\r\n          {formatMessage(messages.cancel)}\r\n        </Button>,\r\n        <Button\r\n          key='submit'\r\n          type='primary'\r\n          loading={loading}\r\n          onClick={handleOk}\r\n          className={styles.deleteModalButton}>\r\n          {formatMessage(messages.delete)}\r\n        </Button>,\r\n      ]}>\r\n      <p>{message}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n\r\nconst messages = defineMessages({\r\n  delete: {\r\n    id: 'client.src.views.components.DeleteModal.delete',\r\n    defaultMessage: 'Delete',\r\n  },\r\n  cancel: {\r\n    id: 'client.src.views.components.DeleteModalcancel',\r\n    defaultMessage: 'Cancel',\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ActionMenu from '../../../components/ActionMenu/ActionMenu';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { GET_ASSETS, DELETE_ASSET } from '../assetSchemas';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport DeleteModal from '../../../components/DeleteModal/DeleteModal';\r\nimport styles from './assetMenu.module.scss';\r\n\r\nconst AssetMenu = ({ record }) => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleOk = () => {\r\n    deleteAsset({ variables: { id: record.id } });\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => setIsModalOpen(false);\r\n\r\n  const [deleteAsset, { deleteData, deleteLoading }] = useMutation(\r\n    DELETE_ASSET,\r\n    {\r\n      onCompleted: (data) => {\r\n        openNotification(\r\n          formatMessage(messages.title),\r\n          data.deleteAsset.message,\r\n          'success'\r\n        );\r\n      },\r\n      update: (cache, { data: { addAsset } }) => {\r\n        const { allAssets } = cache.readQuery({ query: GET_ASSETS });\r\n        cache.writeQuery({\r\n          query: GET_ASSETS,\r\n          data: {\r\n            allAssets: {\r\n              allElements: allAssets.allElements.filter(\r\n                (el) => el.id !== record.id\r\n              ),\r\n              count: allAssets.count - 1,\r\n            },\r\n          },\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const content = (\r\n    <div className={styles.buttonsContainer}>\r\n      <Button\r\n        className={styles.button}\r\n        onClick={() => {\r\n          history.push(`/editAsset?id=${record.id}`);\r\n        }}>\r\n        Edit\r\n      </Button>\r\n      <Button\r\n        className={styles.deleteButton}\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}>\r\n        {formatMessage(messages.title)}\r\n      </Button>\r\n      <DeleteModal\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        loading={deleteLoading}\r\n        isModalOpen={isModalOpen}\r\n        title={formatMessage(messages.title)}\r\n        message={formatMessage(messages.deleteMessage, { asset: record.name })}\r\n      />\r\n    </div>\r\n  );\r\n  return <ActionMenu content={content} />;\r\n};\r\n\r\nexport default AssetMenu;\r\n\r\nconst messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.assetsPage.assetsMenu.title',\r\n    defaultMessage: 'Delete',\r\n  },\r\n  deleteMessage: {\r\n    id: 'client.src.views.assetsPage.assetsMenu.deleteMessage',\r\n    defaultMessage: \"Do you really want to delete ''{asset}''?\",\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { defineMessages } from 'react-intl';\r\nimport AssetMenu from './assetMenu/AssetMenu';\r\n\r\nexport const messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.assetsPage.assetsData.title',\r\n    defaultMessage: 'Assets',\r\n  },\r\n  count: {\r\n    id: 'client.src.views.assetsPage.assetsData.count',\r\n    defaultMessage: 'Count: {count}',\r\n  },\r\n  create: {\r\n    id: 'client.src.views.assetsPage.assetsData.create',\r\n    defaultMessage: 'Create asset',\r\n  },\r\n});\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Quantity',\r\n    dataIndex: 'quantity',\r\n    key: 'quantity',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Description',\r\n    dataIndex: 'description',\r\n    width: '35%',\r\n    key: 'description',\r\n  },\r\n  {\r\n    title: '',\r\n    key: 'action',\r\n    width: '10%',\r\n    render: (text, record) => <AssetMenu record={record} />,\r\n  },\r\n];\r\n","import { PlusOutlined } from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Table, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GET_ASSETS } from './assetSchemas';\r\nimport { columns, messages } from './assetsData';\r\nimport './assetsPage.scss';\r\n\r\nconst AssetsPage = () => {\r\n  const history = useHistory();\r\n  const { formatMessage } = useIntl();\r\n  const { loading, error, data } = useQuery(GET_ASSETS);\r\n\r\n  const { Title } = Typography;\r\n  const columnData =\r\n    data &&\r\n    data.allAssets &&\r\n    data.allAssets.allElements &&\r\n    data.allAssets.allElements.map((el) => ({\r\n      key: el.id,\r\n      ...el,\r\n    }));\r\n  const count = data && data.allAssets && data.allAssets.count;\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='headerContainer'>\r\n        <div>\r\n          <Title className='headerTitle'>{formatMessage(messages.title)}</Title>\r\n          <Title className='headerSubtitle'>\r\n            {formatMessage(messages.count, { count })}\r\n          </Title>\r\n        </div>\r\n        <Button\r\n          type='primary'\r\n          size='large'\r\n          icon={<PlusOutlined />}\r\n          className='addButton'\r\n          onClick={() => history.push('/createAsset')}>\r\n          {formatMessage(messages.create)}\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={columnData}\r\n        loading={loading}\r\n        className='tableContainer'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetsPage;\r\n","import React from 'react';\r\nimport { Button, Typography, Breadcrumb, Form } from 'antd';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './createContainer.scss';\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst CreateContainer = (props) => {\r\n  const history = useHistory();\r\n  const { formatMessage } = useIntl();\r\n  const { formItems, backTo, currentPage, title, onSubmit, id } = props;\r\n\r\n  const { Title } = Typography;\r\n\r\n  const onFinish = (values) => {\r\n    const variables = id ? { ...values, id } : { ...values };\r\n    onSubmit({ variables });\r\n  };\r\n  return (\r\n    <div className='createContainer'>\r\n      <Breadcrumb className='breadcrumb'>\r\n        <Breadcrumb.Item>\r\n          <Button type='link' size='small' onClick={() => history.goBack()}>\r\n            {backTo}\r\n          </Button>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{currentPage}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className='createHeaderContainer'>\r\n        <Title className='headerTitle'>{title}</Title>\r\n      </div>\r\n      <div className='createFormContainer'>\r\n        <Form\r\n          {...layout}\r\n          name='nest-messages'\r\n          onFinish={onFinish}\r\n          validateMessages={validateMessages}>\r\n          {formItems}\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <div className='buttonsContainer'>\r\n              <Button\r\n                type='primary'\r\n                size='large'\r\n                className='createButton cancelButton'\r\n                onClick={() => history.goBack()}>\r\n                {formatMessage(messages.cancel)}\r\n              </Button>\r\n              <Button\r\n                type='primary'\r\n                size='large'\r\n                className='createButton'\r\n                htmlType='submit'>\r\n                {formatMessage(messages.save)}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateContainer;\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nconst messages = defineMessages({\r\n  cancel: {\r\n    id: 'client.src.components.createContainer.cancel',\r\n    defaultMessage: 'Cancel',\r\n  },\r\n  save: {\r\n    id: 'client.src.components.createContainer.create',\r\n    defaultMessage: 'Save',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, InputNumber } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport CreateContainer from '../../../components/CreateContainer/CreateContainer';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport { GET_ASSETS, CREATE_ASSET } from '../assetSchemas';\r\n\r\nconst CreateAsset = () => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [\r\n    createAsset,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(CREATE_ASSET, {\r\n    onCompleted: (data) => {\r\n      openNotification('Add asset', data.addAsset.message, 'success');\r\n      history.push('/assets');\r\n    },\r\n    update: (cache, { data: { addAsset } }) => {\r\n      const { allAssets } = cache.readQuery({ query: GET_ASSETS });\r\n      cache.writeQuery({\r\n        query: GET_ASSETS,\r\n        data: {\r\n          allAssets: {\r\n            allElements: allAssets.allElements.concat([addAsset.asset]),\r\n            count: allAssets.count + 1,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const formItems = (\r\n    <React.Fragment>\r\n      <Form.Item name='name' label='Name' rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='quantity'\r\n        label='Quantity'\r\n        rules={[{ type: 'number', min: 0, max: 100000 }]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item name='description' label='Description'>\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <CreateContainer\r\n      formItems={formItems}\r\n      //These 2 below are for breadcrumb\r\n      backTo={formatMessage(messages.backTo)}\r\n      currentPage={formatMessage(messages.currentPage)}\r\n      title={formatMessage(messages.currentPage)}\r\n      onSubmit={createAsset}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CreateAsset;\r\n\r\nconst messages = defineMessages({\r\n  backTo: {\r\n    id: 'client.src.views.AssetsPage.createAsset.backTo',\r\n    defaultMessage: 'Assets',\r\n  },\r\n  currentPage: {\r\n    id: 'client.src.views.AssetsPage.createAsset.currentPage',\r\n    defaultMessage: 'Create asset',\r\n  },\r\n  save: {\r\n    id: 'client.src.components.createContainer.create',\r\n    defaultMessage: 'Save',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, InputNumber } from 'antd';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport CreateContainer from '../../../components/CreateContainer/CreateContainer';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport { GET_ASSETS, EDIT_ASSET, GET_ASSET } from '../assetSchemas';\r\n\r\nconst EditAsset = () => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const { location } = history;\r\n  const params = new URLSearchParams(location.search);\r\n  const assetId = params.get('id');\r\n\r\n  const {\r\n    loading: assetLoading,\r\n    error: assetError,\r\n    data: assetData,\r\n  } = useQuery(GET_ASSET, { variables: { id: assetId } });\r\n  console.log('AssetData', assetData);\r\n\r\n  const getAsset = (assetData && assetData.getAsset) || {};\r\n\r\n  const { name, quantity, description } = getAsset;\r\n\r\n  const [editAsset, { editData, loading }] = useMutation(EDIT_ASSET, {\r\n    onCompleted: (data) => {\r\n      openNotification(\r\n        formatMessage(messages.edit),\r\n        data.editAsset.message,\r\n        'success'\r\n      );\r\n      history.goBack();\r\n    },\r\n    update: (cache, { data: { editAsset } }) => {\r\n      const { allAssets } = cache.readQuery({ query: GET_ASSETS });\r\n      let assetIndex;\r\n      const editedAsset = allAssets.allElements.find((el, index) => {\r\n        if (el.id === assetId) {\r\n          assetIndex = index;\r\n          return el;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      allAssets.allElements[assetIndex] = editAsset.asset;\r\n    },\r\n  });\r\n\r\n  const formItems = (\r\n    <React.Fragment>\r\n      <Form.Item\r\n        initialValue={name}\r\n        name='name'\r\n        label='Name'\r\n        rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={quantity}\r\n        name='quantity'\r\n        label='Quantity'\r\n        rules={[{ type: 'number', min: 0, max: 100000 }]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={description}\r\n        name='description'\r\n        label='Description'>\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    !assetLoading && (\r\n      <CreateContainer\r\n        formItems={formItems}\r\n        //These 2 below are for breadcrumb\r\n        backTo={formatMessage(messages.backTo)}\r\n        currentPage={formatMessage(messages.currentPage)}\r\n        title={formatMessage(messages.currentPage)}\r\n        onSubmit={editAsset}\r\n        id={assetId}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default EditAsset;\r\n\r\nconst messages = defineMessages({\r\n  backTo: {\r\n    id: 'client.src.views.AssetsPage.createAsset.backTo',\r\n    defaultMessage: 'Assets',\r\n  },\r\n  currentPage: {\r\n    id: 'client.src.views.AssetsPage.createAsset.currentPage',\r\n    defaultMessage: 'Edit asset',\r\n  },\r\n  save: {\r\n    id: 'client.src.components.createContainer.create',\r\n    defaultMessage: 'Save',\r\n  },\r\n  edit: {\r\n    id: 'client.src.views.AssetsPage.editAsset.edit',\r\n    defaultMessage: 'Edit',\r\n  },\r\n});\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_ALL_DEVICES = gql`\r\n  query GetAllDevices {\r\n    allDevices {\r\n      allElements {\r\n        id\r\n        name\r\n        location\r\n        productionDate\r\n        lastMaintenance\r\n        categoryId\r\n      }\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_DEVICE = gql`\r\n  mutation addDevice(\r\n    $name: String!\r\n    $location: Int!\r\n    $productionDate: String!\r\n    $lastMaintenance: String!\r\n    $categoryId: String!\r\n  ) {\r\n    addDevice(\r\n      name: $name\r\n      location: $location\r\n      productionDate: $productionDate\r\n      lastMaintenance: $lastMaintenance\r\n      categoryId: $categoryId\r\n    ) {\r\n      message\r\n      success\r\n      asset {\r\n        name\r\n        location\r\n        productionDate\r\n        lastMaintenance\r\n        categoryId\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DEVICE = gql`\r\n  mutation deleteDevice($id: ID!) {\r\n    deleteDevice(id: $id) {\r\n      message\r\n      success\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_DEVICE = gql`\r\n  mutation editDevice(\r\n    $id: ID!\r\n    $name: String\r\n    $location: Int\r\n    $productionDate: String\r\n    $lastMaintenance: String\r\n    $categoryId: String\r\n  ) {\r\n    editDevice(\r\n      id: $id\r\n      name: $name\r\n      location: $location\r\n      productionDate: $productionDate\r\n      lastMaintenance: $lastMaintenance\r\n      categoryId: $categoryId\r\n    ) {\r\n      message\r\n      success\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CATEGORIES = gql`\r\n  query allDeviceCategories {\r\n    allDeviceCategories {\r\n      allElements {\r\n        id\r\n        name\r\n        quantity\r\n      }\r\n      info {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_DEVICE_CATEGORY = gql`\r\n  mutation CreateCategory($name: String) {\r\n    createDeviceCategory(name: $name) {\r\n      message\r\n      success\r\n      asset {\r\n        name\r\n        quantity\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DEVICE = gql`\r\n  query GetDevice($id: ID!) {\r\n    getDevice(id: $id) {\r\n      id\r\n      name\r\n      location\r\n      productionDate\r\n      lastMaintenance\r\n      categoryId\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ActionMenu from '../../../components/ActionMenu/ActionMenu';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { GET_ALL_DEVICES, DELETE_DEVICE } from '../devicesSchemas';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport DeleteModal from '../../../components/DeleteModal/DeleteModal';\r\nimport styles from './deviceMenu.module.scss';\r\n\r\nconst DeviceMenu = ({ record }) => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleOk = () => {\r\n    deleteDevice({ variables: { id: record.id } });\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => setIsModalOpen(false);\r\n\r\n  const [deleteDevice, { deleteData, deleteLoading }] = useMutation(\r\n    DELETE_DEVICE,\r\n    {\r\n      onCompleted: (data) => {\r\n        openNotification(\r\n          formatMessage(messages.title),\r\n          data.deleteDevice.message,\r\n          'success'\r\n        );\r\n      },\r\n      update: (cache, { data: { addDevice } }) => {\r\n        const { allDevices } = cache.readQuery({ query: GET_ALL_DEVICES });\r\n        cache.writeQuery({\r\n          query: GET_ALL_DEVICES,\r\n          data: {\r\n            allDevices: {\r\n              allElements: allDevices.allElements.filter(\r\n                (el) => el.id !== record.id\r\n              ),\r\n              count: allDevices.count - 1,\r\n            },\r\n          },\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const content = (\r\n    <div className={styles.buttonsContainer}>\r\n      <Button\r\n        className={styles.button}\r\n        onClick={() => {\r\n          history.push(`/editDevice?id=${record.id}`);\r\n        }}>\r\n        Edit\r\n      </Button>\r\n      <Button\r\n        className={styles.deleteButton}\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}>\r\n        {formatMessage(messages.title)}\r\n      </Button>\r\n      <DeleteModal\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        loading={deleteLoading}\r\n        isModalOpen={isModalOpen}\r\n        title={formatMessage(messages.title)}\r\n        message={formatMessage(messages.deleteMessage, { asset: record.name })}\r\n      />\r\n    </div>\r\n  );\r\n  return <ActionMenu content={content} />;\r\n};\r\n\r\nexport default DeviceMenu;\r\n\r\nconst messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.devicesPage.assetsMenu.title',\r\n    defaultMessage: 'Delete',\r\n  },\r\n  deleteMessage: {\r\n    id: 'client.src.views.devicesPage.assetsMenu.deleteMessage',\r\n    defaultMessage: \"Do you really want to delete ''{asset}''?\",\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { defineMessages } from 'react-intl';\r\nimport DeviceMenu from './deviceMenu/DeviceMenu';\r\n\r\nexport const messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.devicesPage.devicesData.title',\r\n    defaultMessage: 'Devices',\r\n  },\r\n  count: {\r\n    id: 'client.src.views.devicesPage.devicesData.count',\r\n    defaultMessage: 'Count: {count}',\r\n  },\r\n  create: {\r\n    id: 'client.src.views.devicesPage.devicesData.create',\r\n    defaultMessage: 'Add',\r\n  },\r\n  category: {\r\n    id: 'client.src.views.devicesPage.devicesData.createCategory',\r\n    defaultMessage: 'Add device',\r\n  },\r\n  device: {\r\n    id: 'client.src.views.devicesPage.devicesData.createDevice',\r\n    defaultMessage: 'Add device category',\r\n  },\r\n});\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Location',\r\n    dataIndex: 'location',\r\n    key: 'location',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Production Date',\r\n    dataIndex: 'productionDate',\r\n    width: '20%',\r\n    key: 'productionDate',\r\n  },\r\n  {\r\n    title: 'Last maintenance',\r\n    dataIndex: 'lastMaintenance',\r\n    width: '20%',\r\n    key: 'lastMaintenance',\r\n  },\r\n  {\r\n    title: '',\r\n    key: 'action',\r\n    width: '10%',\r\n    render: (text, record) => <DeviceMenu record={record} />,\r\n  },\r\n];\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_CATEGORIES = gql`\r\n  query allDeviceCategories {\r\n    allDeviceCategories {\r\n      allElements {\r\n        id\r\n        name\r\n        quantity\r\n      }\r\n      info {\r\n        success\r\n        message\r\n      }\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_DEVICE_CATEGORY = gql`\r\n  mutation CreateCategory($name: String) {\r\n    createDeviceCategory(name: $name) {\r\n      message\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DEVICE_CATEGORY = gql`\r\n  mutation DeleteDeviceCategory($id: ID!) {\r\n    deleteDeviceCategory(id: $id) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DEVICES_BY_CATEGORY = gql`\r\n  query GetDevices($categoryId: ID!) {\r\n    allDevicesByCategory(categoryId: $categoryId) {\r\n      allElements {\r\n        name\r\n        location\r\n        productionDate\r\n        lastMaintenance\r\n      }\r\n      count\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, Select, Modal } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport CreateContainer from '../../../components/CreateContainer/CreateContainer';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport { ADD_DEVICE_CATEGORY } from '../devicesSchemas';\r\nimport { GET_CATEGORIES } from '../../DeviceCategoriesPage/categoriesSchemas';\r\n// import styles from './addDevice.module.scss';\r\n\r\nconst config = {\r\n  rules: [{ type: 'object', required: true, message: 'Please select time!' }],\r\n};\r\n\r\nconst AddDeviceCategory = ({ visible, setVisible, onCancel }) => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [category, setCategory] = useState();\r\n  const [form] = Form.useForm();\r\n\r\n  const { Option } = Select;\r\n\r\n  const [\r\n    addDeviceCategory,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(ADD_DEVICE_CATEGORY, {\r\n    onCompleted: (data) => {\r\n      console.log('Data', data);\r\n      openNotification(\r\n        'Add device category',\r\n        data.createDeviceCategory.message,\r\n        'success'\r\n      );\r\n    },\r\n    update: (cache, { data: { createDeviceCategory } }) => {\r\n      const { allDeviceCategories } = cache.readQuery({\r\n        query: GET_CATEGORIES,\r\n      });\r\n      console.log('Result', allDeviceCategories, createDeviceCategory);\r\n      cache.writeQuery({\r\n        query: GET_CATEGORIES,\r\n        data: {\r\n          allDeviceCategories: {\r\n            allElements: allDeviceCategories.allElements.concat([\r\n              createDeviceCategory.asset,\r\n            ]),\r\n            count: allDeviceCategories.count + 1,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title={formatMessage(messages.title)}\r\n      okText={formatMessage(messages.create)}\r\n      cancelText={formatMessage(messages.cancel)}\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            form.resetFields();\r\n            addDeviceCategory({ variables: { ...values } });\r\n            setVisible(false);\r\n          })\r\n          .catch((info) => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      }}>\r\n      <Form\r\n        form={form}\r\n        layout='vertical'\r\n        name='form_in_modal'\r\n        initialValues={{ modifier: 'public' }}>\r\n        <Form.Item\r\n          name='name'\r\n          label={formatMessage(messages.name)}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: formatMessage(messages.inputTitle),\r\n            },\r\n          ]}>\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddDeviceCategory;\r\n\r\nconst messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.DevicessPage.AddDeviceCategory.title',\r\n    defaultMessage: 'Create new device category',\r\n  },\r\n  categoryName: {\r\n    id: 'client.src.views.DevicessPage.AddDeviceCategory.categoryName',\r\n    defaultMessage: 'Category name',\r\n  },\r\n  create: {\r\n    id: 'client.src.views.DevicessPage.AddDeviceCategory.create',\r\n    defaultMessage: 'Create',\r\n  },\r\n  cancel: {\r\n    id: 'client.src.views.DevicessPage.AddDeviceCategory.cancel',\r\n    defaultMessage: 'Cancel',\r\n  },\r\n  inputTitle: {\r\n    id: 'client.src.views.DevicessPage.AddDeviceCategory.inputTitle',\r\n    defaultMessage: 'Please input category name!',\r\n  },\r\n  name: {\r\n    id: 'client.src.views.DevicessPage.AddDeviceCategory.name',\r\n    defaultMessage: 'Name',\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { PlusOutlined, DownOutlined } from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Table, Typography, Menu, Dropdown } from 'antd';\r\nimport { useIntl } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GET_ALL_DEVICES } from './devicesSchemas';\r\nimport { columns, messages } from './devicesData';\r\nimport AddDeviceCategory from './addDeviceCategory/AddDeviceCategory';\r\nimport './devicesPage.scss';\r\n\r\nconst DevicesPage = () => {\r\n  const history = useHistory();\r\n  const { formatMessage } = useIntl();\r\n  const { loading, error, data } = useQuery(GET_ALL_DEVICES);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const { Title } = Typography;\r\n  const columnData =\r\n    data &&\r\n    data.allDevices &&\r\n    data.allDevices.allElements &&\r\n    data.allDevices.allElements.map((el) => ({\r\n      key: el.id,\r\n      ...el,\r\n    }));\r\n  const count = data && data.allDevices && data.allDevices.count;\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key='0'>\r\n        <Button\r\n          type='link'\r\n          ghost\r\n          className='menuItem'\r\n          onClick={() => history.push('/addDevice')}>\r\n          {formatMessage(messages.category)}\r\n        </Button>\r\n      </Menu.Item>\r\n      <Menu.Item key='1'>\r\n        <Button\r\n          type='link'\r\n          ghost\r\n          className='menuItem'\r\n          onClick={() => setVisible(true)}>\r\n          {formatMessage(messages.device)}\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='headerContainer'>\r\n        <div>\r\n          <Title className='headerTitle'>{formatMessage(messages.title)}</Title>\r\n          <Title className='headerSubtitle'>\r\n            {formatMessage(messages.count, { count })}\r\n          </Title>\r\n        </div>\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n          <Button\r\n            type='primary'\r\n            size='large'\r\n            icon={<PlusOutlined />}\r\n            className='addButton'>\r\n            {formatMessage(messages.create)} <DownOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n      </div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={columnData}\r\n        loading={loading}\r\n        className='tableContainer'\r\n      />\r\n      <AddDeviceCategory\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevicesPage;\r\n","import React, { useState } from 'react';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, InputNumber, DatePicker, Select } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport CreateContainer from '../../../components/CreateContainer/CreateContainer';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport { ADD_DEVICE, GET_CATEGORIES, GET_ALL_DEVICES } from '../devicesSchemas';\r\nimport styles from './addDevice.module.scss';\r\n\r\nconst config = {\r\n  rules: [{ type: 'object', required: true, message: 'Please select time!' }],\r\n};\r\n\r\nconst AddDevice = ({ value = {}, onChange }) => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [category, setCategory] = useState();\r\n\r\n  const { Option } = Select;\r\n\r\n  const [\r\n    addDevice,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(ADD_DEVICE, {\r\n    onCompleted: (data) => {\r\n      console.log('Data', data);\r\n      openNotification('Add device', data.addDevice.message, 'success');\r\n      history.push('/devices');\r\n    },\r\n    update: (cache, { data: { addDevice } }) => {\r\n      const { allDevices } = cache.readQuery({ query: GET_ALL_DEVICES });\r\n      cache.writeQuery({\r\n        query: GET_ALL_DEVICES,\r\n        data: {\r\n          allDevices: {\r\n            allElements: allDevices.allElements.concat([addDevice.asset]),\r\n            count: allDevices.count + 1,\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const {\r\n    loading: categoryLoading,\r\n    error: categoryError,\r\n    data: categoryData,\r\n  } = useQuery(GET_CATEGORIES);\r\n\r\n  const formItems = (\r\n    <React.Fragment>\r\n      <Form.Item name='name' label='Name' rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name='productionDate' label='Production date' {...config}>\r\n        <DatePicker />\r\n      </Form.Item>\r\n      <Form.Item name='lastMaintenance' label='Last maintenance' {...config}>\r\n        <DatePicker />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='location'\r\n        label='Location'\r\n        rules={[{ required: true, type: 'number' }]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='categoryId'\r\n        label='Category'\r\n        rules={[{ required: true }]}>\r\n        <Select\r\n          defaultValue='Select category'\r\n          className={styles.select}\r\n          disabled={\r\n            categoryData && !categoryData.allDeviceCategories.allElements.length\r\n          }\r\n          value={category}\r\n          onChange={(newCategory) => setCategory(newCategory)}>\r\n          {categoryData &&\r\n            categoryData.allDeviceCategories.allElements.map((cat) => (\r\n              <Option value={cat.id}>{cat.name}</Option>\r\n            ))}\r\n        </Select>\r\n      </Form.Item>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <CreateContainer\r\n      formItems={formItems}\r\n      //These 2 below are for breadcrumb\r\n      backTo={formatMessage(messages.backTo)}\r\n      currentPage={formatMessage(messages.currentPage)}\r\n      title={formatMessage(messages.currentPage)}\r\n      onSubmit={addDevice}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddDevice;\r\n\r\nconst messages = defineMessages({\r\n  backTo: {\r\n    id: 'client.src.views.AssetsPage.createAsset.backTo',\r\n    defaultMessage: 'Devices',\r\n  },\r\n  currentPage: {\r\n    id: 'client.src.views.AssetsPage.createAsset.currentPage',\r\n    defaultMessage: 'Add device',\r\n  },\r\n  save: {\r\n    id: 'client.src.components.createContainer.create',\r\n    defaultMessage: 'Save',\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, InputNumber, DatePicker, Select } from 'antd';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport CreateContainer from '../../../components/CreateContainer/CreateContainer';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport {\r\n  EDIT_DEVICE,\r\n  GET_CATEGORIES,\r\n  GET_ALL_DEVICES,\r\n  GET_DEVICE,\r\n} from '../devicesSchemas';\r\nimport moment from 'moment';\r\nimport styles from './editDevice.module.scss';\r\n\r\nconst config = {\r\n  rules: [{ type: 'object', required: false, message: 'Please select time!' }],\r\n};\r\n\r\nconst EditDevice = ({ value = {}, onChange }) => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [category, setCategory] = useState();\r\n  const { location } = history;\r\n  const params = new URLSearchParams(location.search);\r\n  const deviceId = params.get('id');\r\n\r\n  const { Option } = Select;\r\n\r\n  const {\r\n    loading: deviceLoading,\r\n    error: deviceError,\r\n    data: deviceData,\r\n  } = useQuery(GET_DEVICE, { variables: { id: deviceId } });\r\n\r\n  const getDevice = (deviceData && deviceData.getDevice) || {};\r\n  const {\r\n    name,\r\n    lastMaintenance,\r\n    productionDate,\r\n    location: deviceLocation,\r\n  } = getDevice;\r\n  const [\r\n    editDevice,\r\n    { data, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(EDIT_DEVICE, {\r\n    onCompleted: (data) => {\r\n      openNotification('Edit device', data.editDevice.message, 'success');\r\n      history.push('/devices');\r\n    },\r\n    update: (cache, { data: { editDevice } }) => {\r\n      const { allDevices } = cache.readQuery({ query: GET_ALL_DEVICES });\r\n      let deviceIndex;\r\n      const editedDevice = allDevices.allElements.find((el, index) => {\r\n        if (el.id === deviceId) {\r\n          deviceIndex = index;\r\n          return el;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      allDevices.allElements[deviceIndex] = editDevice.asset;\r\n    },\r\n  });\r\n\r\n  const {\r\n    loading: categoryLoading,\r\n    error: categoryError,\r\n    data: categoryData,\r\n  } = useQuery(GET_CATEGORIES);\r\n\r\n  const formItems = (\r\n    <React.Fragment>\r\n      <Form.Item\r\n        initialValue={name}\r\n        name='name'\r\n        label='Name'\r\n        rules={[{ required: false }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={moment(productionDate)}\r\n        name='productionDate'\r\n        label='Production date'\r\n        {...config}>\r\n        <DatePicker />\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={moment(lastMaintenance)}\r\n        name='lastMaintenance'\r\n        label='Last maintenance'\r\n        {...config}>\r\n        <DatePicker />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='location'\r\n        label='Location'\r\n        initialValue={deviceLocation}\r\n        rules={[{ required: false, type: 'number' }]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='categoryId'\r\n        label='Category'\r\n        rules={[{ required: false }]}>\r\n        <Select\r\n          disabled\r\n          defaultValue='Select category'\r\n          className={styles.select}\r\n          value={category}\r\n          onChange={(newCategory) => setCategory(newCategory)}>\r\n          {categoryData &&\r\n            categoryData.allDeviceCategories.allElements.map((cat) => (\r\n              <Option value={cat.id}>{cat.name}</Option>\r\n            ))}\r\n        </Select>\r\n      </Form.Item>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    !deviceLoading && (\r\n      <CreateContainer\r\n        formItems={formItems}\r\n        //These 2 below are for breadcrumb\r\n        backTo={formatMessage(messages.backTo)}\r\n        currentPage={formatMessage(messages.currentPage)}\r\n        title={formatMessage(messages.currentPage)}\r\n        onSubmit={editDevice}\r\n        id={deviceId}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default EditDevice;\r\n\r\nconst messages = defineMessages({\r\n  backTo: {\r\n    id: 'client.src.views.AssetsPage.createAsset.backTo',\r\n    defaultMessage: 'Devices',\r\n  },\r\n  currentPage: {\r\n    id: 'client.src.views.AssetsPage.createAsset.currentPage',\r\n    defaultMessage: 'Edit device',\r\n  },\r\n  save: {\r\n    id: 'client.src.components.createContainer.create',\r\n    defaultMessage: 'Save',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Button, Result } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ErrorPage = () => {\r\n  const history = useHistory();\r\n  const { location } = history;\r\n  const params = new URLSearchParams(location.search);\r\n  const errorNumber = params.get('error');\r\n  const message = params.get('message');\r\n  return (\r\n    <Result\r\n      status={errorNumber}\r\n      title={errorNumber}\r\n      subTitle={`Sorry, something went wrong. Error: ${message}`}\r\n      extra={\r\n        <Button type='primary' onClick={() => history.push('/')}>\r\n          Back Home\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useIntl, defineMessages } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ActionMenu from '../../../components/ActionMenu/ActionMenu';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { GET_CATEGORIES, DELETE_DEVICE_CATEGORY } from '../categoriesSchemas';\r\nimport { openNotification } from '../../../common/functions/openNotification';\r\nimport DeleteModal from '../../../components/DeleteModal/DeleteModal';\r\nimport styles from './deviceCategoriesMenu.module.scss';\r\n\r\nconst DeviceCategoriesMenu = ({ record }) => {\r\n  const { formatMessage } = useIntl();\r\n  const history = useHistory();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleOk = () => {\r\n    deleteDeviceCategory({ variables: { id: record.id } });\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => setIsModalOpen(false);\r\n\r\n  const [deleteDeviceCategory, { deleteData, deleteLoading }] = useMutation(\r\n    DELETE_DEVICE_CATEGORY,\r\n    {\r\n      onCompleted: (data) => {\r\n        openNotification(\r\n          formatMessage(messages.title),\r\n          data.deleteDeviceCategory.message,\r\n          'success'\r\n        );\r\n      },\r\n      update: (cache) => {\r\n        const { allDeviceCategories } = cache.readQuery({\r\n          query: GET_CATEGORIES,\r\n        });\r\n        cache.writeQuery({\r\n          query: GET_CATEGORIES,\r\n          data: {\r\n            allDeviceCategories: {\r\n              allElements: allDeviceCategories.allElements.filter(\r\n                (el) => el.id !== record.id\r\n              ),\r\n              count: allDeviceCategories.count - 1,\r\n            },\r\n          },\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const content = (\r\n    <div className={styles.buttonsContainer}>\r\n      {/* <Button\r\n        className={styles.button}\r\n        onClick={() => {\r\n          history.push(`/editDevice?id=${record.id}`);\r\n        }}>\r\n        {formatMessage(messages.edit)}\r\n      </Button> */}\r\n      <Button\r\n        className={styles.deleteButton}\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}>\r\n        {formatMessage(messages.title)}\r\n      </Button>\r\n      <DeleteModal\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        loading={deleteLoading}\r\n        isModalOpen={isModalOpen}\r\n        title={formatMessage(messages.title)}\r\n        message={formatMessage(messages.deleteMessage, { asset: record.name })}\r\n      />\r\n    </div>\r\n  );\r\n  return <ActionMenu content={content} />;\r\n};\r\n\r\nexport default DeviceCategoriesMenu;\r\n\r\nconst messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.devicesPage.assetsMenu.title',\r\n    defaultMessage: 'Delete',\r\n  },\r\n  deleteMessage: {\r\n    id: 'client.src.views.devicesPage.assetsMenu.deleteMessage',\r\n    defaultMessage:\r\n      \"Do you really want to delete category ''{asset}''? It will also delete all devices that belongs to this category.\",\r\n  },\r\n  edit: {\r\n    id: 'client.src.views.devicesPage.assetsMenu.title',\r\n    defaultMessage: 'Edit',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { defineMessages } from 'react-intl';\r\nimport DeviceMenu from '../DevicesPage/deviceMenu/DeviceMenu';\r\nimport DeviceCategoriesMenu from './deviceCategoriesMenu/deviceCategoriesMenu';\r\n\r\nexport const messages = defineMessages({\r\n  title: {\r\n    id: 'client.src.views.devicesPage.devicesData.title',\r\n    defaultMessage: 'Device categories',\r\n  },\r\n  count: {\r\n    id: 'client.src.views.devicesPage.devicesData.count',\r\n    defaultMessage: 'Count: {count}',\r\n  },\r\n  create: {\r\n    id: 'client.src.views.devicesPage.devicesData.create',\r\n    defaultMessage: 'Add',\r\n  },\r\n  category: {\r\n    id: 'client.src.views.devicesPage.devicesData.createCategory',\r\n    defaultMessage: 'Add device',\r\n  },\r\n  device: {\r\n    id: 'client.src.views.devicesPage.devicesData.createDevice',\r\n    defaultMessage: 'Add device category',\r\n  },\r\n  categories: {\r\n    id: 'client.src.views.devicesPage.devicesData.categories',\r\n    defaultMessage: 'Categories',\r\n  },\r\n});\r\n\r\nexport const columns = (history) => [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: (text, record) => (\r\n      <Button\r\n        type='link'\r\n        onClick={() =>\r\n          history.push(`/categoryDetails?id=${record.id}&name=${record.name}`)\r\n        }>\r\n        {text}\r\n      </Button>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Quantity',\r\n    dataIndex: 'quantity',\r\n    key: 'quantity',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Description',\r\n    dataIndex: 'description',\r\n    width: '40%',\r\n    key: 'description',\r\n  },\r\n  {\r\n    title: '',\r\n    key: 'action',\r\n    width: '10%',\r\n    render: (text, record) => <DeviceCategoriesMenu record={record} />,\r\n  },\r\n];\r\n\r\nexport const detailsColumns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Location',\r\n    dataIndex: 'location',\r\n    key: 'location',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Production Date',\r\n    dataIndex: 'productionDate',\r\n    width: '20%',\r\n    key: 'productionDate',\r\n  },\r\n  {\r\n    title: 'Last maintenance',\r\n    dataIndex: 'lastMaintenance',\r\n    width: '20%',\r\n    key: 'lastMaintenance',\r\n  },\r\n  {\r\n    title: '',\r\n    key: 'action',\r\n    width: '10%',\r\n    render: (text, record) => <DeviceMenu record={record} />,\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { PlusOutlined, DownOutlined } from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Table, Typography, Menu, Dropdown } from 'antd';\r\nimport { useIntl } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GET_CATEGORIES } from './categoriesSchemas';\r\nimport { columns, messages } from './categoriesData';\r\nimport AddDeviceCategory from '../DevicesPage/addDeviceCategory/AddDeviceCategory';\r\n// import './devicesPage.scss';\r\n\r\nconst DeviceCategoriesPage = () => {\r\n  const history = useHistory();\r\n  const { formatMessage } = useIntl();\r\n  const { loading, error, data } = useQuery(GET_CATEGORIES);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const { Title } = Typography;\r\n  const columnData =\r\n    data &&\r\n    data.allDeviceCategories &&\r\n    data.allDeviceCategories.allElements &&\r\n    data.allDeviceCategories.allElements.map((el) => ({\r\n      key: el.id,\r\n      ...el,\r\n    }));\r\n  const count =\r\n    data && data.allDeviceCategories && data.allDeviceCategories.count;\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key='0'>\r\n        <Button\r\n          type='link'\r\n          ghost\r\n          className='menuItem'\r\n          onClick={() => history.push('/addDevice')}>\r\n          {formatMessage(messages.category)}\r\n        </Button>\r\n      </Menu.Item>\r\n      <Menu.Item key='1'>\r\n        <Button\r\n          type='link'\r\n          ghost\r\n          className='menuItem'\r\n          onClick={() => setVisible(true)}>\r\n          {formatMessage(messages.device)}\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='headerContainer'>\r\n        <div>\r\n          <Title className='headerTitle'>{formatMessage(messages.title)}</Title>\r\n          <Title className='headerSubtitle'>\r\n            {formatMessage(messages.count, { count })}\r\n          </Title>\r\n        </div>\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n          <Button\r\n            type='primary'\r\n            size='large'\r\n            icon={<PlusOutlined />}\r\n            className='addButton'>\r\n            {formatMessage(messages.create)} <DownOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n      </div>\r\n      <Table\r\n        columns={columns(history)}\r\n        dataSource={columnData}\r\n        loading={loading}\r\n        className='tableContainer'\r\n      />\r\n      <AddDeviceCategory\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceCategoriesPage;\r\n","import React, { useState } from 'react';\r\nimport { PlusOutlined, DownOutlined } from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Table, Typography, Menu, Dropdown, Breadcrumb } from 'antd';\r\nimport { useIntl } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DEVICES_BY_CATEGORY } from '../categoriesSchemas';\r\nimport { detailsColumns, messages } from '../categoriesData';\r\n// import AddDeviceCategory from '../DevicesPage/addDeviceCategory/AddDeviceCategory';\r\n// import './devicesPage.scss';\r\n\r\nconst DeviceCategoriesPage = () => {\r\n  const history = useHistory();\r\n  const { formatMessage } = useIntl();\r\n  const { location } = history;\r\n  const params = new URLSearchParams(location.search);\r\n  const categoryId = params.get('id');\r\n  const name = params.get('name');\r\n\r\n  const { loading, error, data } = useQuery(DEVICES_BY_CATEGORY, {\r\n    variables: { categoryId },\r\n  });\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const { Title } = Typography;\r\n  const columnData =\r\n    data &&\r\n    data.allDevicesByCategory &&\r\n    data.allDevicesByCategory.allElements &&\r\n    data.allDevicesByCategory.allElements.map((el) => ({\r\n      key: el.id,\r\n      ...el,\r\n    }));\r\n  const count =\r\n    data && data.allDevicesByCategory && data.allDevicesByCategory.count;\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key='0'>\r\n        <Button\r\n          type='link'\r\n          ghost\r\n          className='menuItem'\r\n          onClick={() => history.push('/addDevice')}>\r\n          {formatMessage(messages.category)}\r\n        </Button>\r\n      </Menu.Item>\r\n      <Menu.Item key='1'>\r\n        <Button\r\n          type='link'\r\n          ghost\r\n          className='menuItem'\r\n          onClick={() => setVisible(true)}>\r\n          {formatMessage(messages.device)}\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Breadcrumb className='breadcrumb'>\r\n        <Breadcrumb.Item>\r\n          <Button type='link' size='small' onClick={() => history.goBack()}>\r\n            {formatMessage(messages.categories)}\r\n          </Button>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>{name}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className='headerContainer'>\r\n        <div>\r\n          <Title className='headerTitle'>{formatMessage(messages.title)}</Title>\r\n          <Title className='headerSubtitle'>\r\n            {formatMessage(messages.count, { count })}\r\n          </Title>\r\n        </div>\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n          <Button\r\n            type='primary'\r\n            size='large'\r\n            icon={<PlusOutlined />}\r\n            className='addButton'>\r\n            {formatMessage(messages.create)} <DownOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n      </div>\r\n      <Table\r\n        columns={detailsColumns}\r\n        dataSource={columnData}\r\n        loading={loading}\r\n        className='tableContainer'\r\n      />\r\n      {/* <AddDeviceCategory\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }} */}\r\n      {/* /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceCategoriesPage;\r\n","import React from 'react';\nimport { useCookies } from 'react-cookie';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport { LoginRoute, PrivateRoute } from './routes';\nimport {\n  CreateAccountPage,\n  LoginPage,\n  MainPage,\n  AssetsPage,\n  CreateAsset,\n  EditAsset,\n  DevicesPage,\n  AddDevice,\n  EditDevice,\n  ErrorPage,\n  DeviceCategoriesPage,\n  CategoryPage,\n} from './views/index';\n\nconst App = () => {\n  const [cookies] = useCookies();\n  const isAuthenticated = cookies['refresh-token'];\n  return (\n    <IntlProvider>\n      <div className='App'>\n        <Router>\n          <Navbar isAuthenticated={isAuthenticated} />\n          <Switch>\n            <LoginRoute isAuthenticated={isAuthenticated} path='/createAccount'>\n              <CreateAccountPage />\n            </LoginRoute>\n            <LoginRoute isAuthenticated={isAuthenticated} path='/login'>\n              <LoginPage />\n            </LoginRoute>\n            <PrivateRoute isAuthenticated={isAuthenticated} path='/assets'>\n              <AssetsPage />\n            </PrivateRoute>\n            <PrivateRoute isAuthenticated={isAuthenticated} path='/createAsset'>\n              <CreateAsset />\n            </PrivateRoute>\n            <PrivateRoute isAuthenticated={isAuthenticated} path='/editAsset'>\n              <EditAsset />\n            </PrivateRoute>\n            <PrivateRoute isAuthenticated={isAuthenticated} path='/devices'>\n              <DevicesPage />\n            </PrivateRoute>\n            <PrivateRoute isAuthenticated={isAuthenticated} path='/addDevice'>\n              <AddDevice />\n            </PrivateRoute>\n            <PrivateRoute isAuthenticated={isAuthenticated} path='/editDevice'>\n              <EditDevice />\n            </PrivateRoute>\n            <PrivateRoute\n              isAuthenticated={isAuthenticated}\n              path='/deviceCategories'>\n              <DeviceCategoriesPage />\n            </PrivateRoute>\n            <PrivateRoute\n              isAuthenticated={isAuthenticated}\n              path='/categoryDetails'>\n              <CategoryPage />\n            </PrivateRoute>\n            <Route path='/error'>\n              <ErrorPage />\n            </Route>\n            <Route path='/'>\n              <MainPage />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ApolloClient from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { onError } from 'apollo-link-error';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { CookiesProvider } from 'react-cookie';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport 'antd/dist/antd.css';\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  credentials: 'include',\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  return forward(operation).map((response) => {\n    if (response.data) {\n      const isEmpty = !Object.values(response.data).some((x) => x !== null);\n      if (isEmpty) window.location = '/';\n    }\n    return response;\n  });\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    // window.location = `/error?error=500&message=${graphQLErrors[0]}`;\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n  }\n  if (networkError) {\n    // window.location = `/error?error=500&message=${networkError}`;\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(errorLink.concat(httpLink)),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailContainer\":\"emailForm_emailContainer__2we_K\",\"formContainer\":\"emailForm_formContainer__sv876\",\"buttonContainer\":\"emailForm_buttonContainer__1h7BG\",\"titleContainer\":\"emailForm_titleContainer__ZplDT\",\"subTitle\":\"emailForm_subTitle__3k8uQ\",\"title\":\"emailForm_title__1hMbs\",\"sendButton\":\"emailForm_sendButton__11CYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"loginPage_loginContainer__ZRzBu\",\"formContainer\":\"loginPage_formContainer__1Jq7S\",\"title\":\"loginPage_title__1pbF8\",\"loginButton\":\"loginPage_loginButton__1AnE2\",\"infoText\":\"loginPage_infoText__kT8Id\"};"],"sourceRoot":""}